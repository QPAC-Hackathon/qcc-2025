{"ast":null,"code":"var _jsxFileName = \"/Users/master/qc-hackathon/client/src/pages/Tasks.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"./Tasks.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tasks() {\n  _s();\n  const {\n    taskId\n  } = useParams();\n  const worldId = parseInt(taskId, 10);\n  const [userData, setUserData] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const accountId = 1; // hardcoded for now\n\n  useEffect(() => {\n    // Temporary: use mock data instead of fetching from API\n    setUserData(mockUserData);\n    setTasks(mockUserData.tasks.filter(task => task.category === worldId));\n\n    // Real fetch (commented out for now)\n    /*\n    async function fetchData() {\n      const userRes = await fetch(\n        `http://localhost:5000/api/users/${accountId}`\n      );\n      const userData = await userRes.json();\n      setUserData(userData);\n       const taskRes = await fetch(\n        `http://localhost:5000/api/tasks?worldID=${worldId}`\n      );\n      const tasksData = await taskRes.json();\n      setTasks(tasksData);\n    }\n     fetchData();\n    */\n  }, [worldId]);\n  if (!userData) return null; // don't render until userData is available\n\n  const worldProgress = userData.categoryProgress[worldId];\n  if (!worldProgress) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"World not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enrich Your Life\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-box\",\n        children: worldProgress.score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"welcome back \", userData.name.toLowerCase()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"level \", worldProgress.level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"idea-button\",\n          children: \"give me ideas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks found for this world.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Tasks, \"Ivbcp1tiKFWgTVq6qJrocSDlMC4=\", false, function () {\n  return [useParams];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useParams","useEffect","useState","jsxDEV","_jsxDEV","Tasks","_s","taskId","worldId","parseInt","userData","setUserData","tasks","setTasks","accountId","mockUserData","filter","task","category","worldProgress","categoryProgress","children","fileName","_jsxFileName","lineNumber","columnNumber","className","score","name","toLowerCase","level","length","map","index","_c","$RefreshReg$"],"sources":["/Users/master/qc-hackathon/client/src/pages/Tasks.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport \"./Tasks.css\";\n\nfunction Tasks() {\n  const { taskId } = useParams();\n  const worldId = parseInt(taskId, 10);\n\n  const [userData, setUserData] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  const accountId = 1; // hardcoded for now\n\n  useEffect(() => {\n    // Temporary: use mock data instead of fetching from API\n    setUserData(mockUserData);\n    setTasks(mockUserData.tasks.filter((task) => task.category === worldId));\n\n    // Real fetch (commented out for now)\n    /*\n    async function fetchData() {\n      const userRes = await fetch(\n        `http://localhost:5000/api/users/${accountId}`\n      );\n      const userData = await userRes.json();\n      setUserData(userData);\n\n      const taskRes = await fetch(\n        `http://localhost:5000/api/tasks?worldID=${worldId}`\n      );\n      const tasksData = await taskRes.json();\n      setTasks(tasksData);\n    }\n\n    fetchData();\n    */\n  }, [worldId]);\n\n  if (!userData) return null; // don't render until userData is available\n\n  const worldProgress = userData.categoryProgress[worldId];\n  if (!worldProgress) {\n    return <div>World not found</div>;\n  }\n\n  return (\n    <div className=\"tasks-page\">\n      <div className=\"header\">\n        <h1>Enrich Your Life</h1>\n        <div className=\"score-box\">{worldProgress.score}</div>\n      </div>\n      <p>welcome back {userData.name.toLowerCase()}</p>\n      <h2>level {worldProgress.level}</h2>\n\n      <div className=\"tasks-container\">\n        {tasks.length > 0 ? (\n          tasks.map((task, index) => (\n            <div key={index} className=\"task-card\">\n              <span>{task.name}</span>\n              <button className=\"idea-button\">give me ideas</button>\n            </div>\n          ))\n        ) : (\n          <p>No tasks found for this world.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Tasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}